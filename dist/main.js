(()=>{"use strict";class r{constructor(){}twoSum(r,t){for(var e=0;e<r.length-1;e++)for(var o=0;o<r.length;o++)if(e!=o&&r[e]+r[o]===t)return[e,o];return[]}fibonacci(r){return r<2?r:this.fibonacci(r-1)+this.fibonacci(r-2)}}class t{constructor(){}findDuplicate(r){var t={};for(let e of r){if(t[e])return e;t[e]=1}return-1}}class e{initiate(r){if(0==r.length)return[];if(1==r.length)return r[0];let t=r.length-1,e=r[0].length-1;return this.spiral(0,[],r,t,e)}spiral(r,t,e,o,n){if(0==o&&0==n)return t;for(let s=r;s<=o;s++)t=this.left(t,e[s],s,n),t=this.down(t,e,s+1,n,o),t=this.right(t,e[o-s],n-1,s),t=this.up(t,e,s+1,s,o),n-=1;return t}addEntry(r,t){return!t&&0!=t||-1!==r.indexOf(t)||(r.push(t),console.log("Added Entry: ",t)),r}left(r,t,e,o){for(let n=e;n<=o;n++)r=this.addEntry(r,t[n]);return r}right(r,t,e,o){e<0&&(e=0);for(let n=e;n>=o;n--)r=this.addEntry(r,t[n]);return r}down(r,t,e,o,n){for(let s=e;s<=n;s++)r=this.addEntry(r,t[s][o]);return r}up(r,t,e,o,n){for(let s=n;s>=e;s--)r=this.addEntry(r,t[s][o]);return r}}class o{constructor(){}buildCache(r){for(var t={},e=0;e<r.length;e++)t[r[e]+""]=e;return t}search(r,t){if(0===r.length)return-1;if(1===r.length&&r[0]==t)return 0;if(1==r.length)return-1;var e=this.buildCache(r);this.sort(r,0,r.length-1);for(var o=0,n=r.length-1,s=Math.floor((n+o)/2);o<=n;){if(r[s]==t)return e[r[s]];r[s]<t?o=s+1:n=s-1,s=Math.floor((n+o)/2)}return-1}sort(r,t,e){if(t<e){var o=Math.floor((e+t)/2);this.sort(r,t,o),this.sort(r,o+1,e),this.merge(r,t,o,e)}}merge(r,t,e,o){for(var n=[],s=[],i=e-t+1,l=o-e,a=0;a<i;a++)n[a]=r[t+a];for(a=0;a<l;a++)s[a]=r[e+1+a];for(var u=0,h=0,f=t;u<i&&h<l;)n[u]<=s[h]?(r[f]=n[u],u++):(r[f]=s[h],h++),f++;for(;u<i;)r[f]=n[u],u++,f++;for(;h<l;)r[f]=s[h],h++,f++}}class n{constructor(){}generate(r){if(""==r)return[];let t=[];for(let e=0;e<r.length;e++)t[e]=this.findNumbers(r[e]);let e=t[0];for(let r=1;r<t.length;r++)e=this.formOutput(e,t[r]);return e}findNumbers(r){return"2"==r?["a","b","c"]:"3"==r?["d","e","f"]:"4"==r?["g","h","i"]:"5"==r?["j","k","l"]:"6"==r?["m","n","o"]:"7"==r?["p","q","r","s"]:"8"==r?["t","u","v"]:"9"==r?["w","x","y","z"]:[]}formOutput(r,t){let e=r;r=[];for(let o=0;o<e.length;o++)for(let n=0;n<t.length;n++)r.push(e[o]+t[n]);return r}}let s=new class{constructor(){this.arrayEasyProblems=new r,this.arrayMediumProblems=new t,this.spiralOrder=new e,this.searchRotatedArray=new o}output(){let r=this.arrayEasyProblems.twoSum([2,7,11,15],9);console.log("Two Sum: ",r),r=this.arrayEasyProblems.fibonacci(4),console.log("Fibonacci: ",r),r=this.arrayMediumProblems.findDuplicate([1,3,4,2,2]),console.log("Find Duplicate: ",r),r=this.spiralOrder.initiate([[1,2,3],[4,5,6],[7,8,9]]),console.log("Spiral Order: ",r),r=this.searchRotatedArray.search([4,5,6,7,0,1,2],0),console.log("Search Rotated Array: ",r)}},i=new class{constructor(){this.letterCombinations=new n}output(){console.log("Letter Combos for 23 is "+this.letterCombinations.generate("23"))}};s.output(),i.output()})();